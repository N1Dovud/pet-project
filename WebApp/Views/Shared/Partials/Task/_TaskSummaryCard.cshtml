@model TaskCardModel;

@if (Model?.TaskSummary != null)
{
    var rowClass = "task";
    @if (Model.HighlightOverdues)
    {
        var isOverdue = Model.TaskSummary.DueDateTime < DateTime.Now
                        && Model.TaskSummary.TaskStatus != ToDoListTaskStatus.Completed;
        if (isOverdue)
        {
            rowClass = "overdue";
        }
    }
    <div class="@rowClass">
        <strong>@Model.TaskSummary.Title</strong> - @Model.TaskSummary.Description
            <br />
        Created on: @Model.TaskSummary.CreationDateTime.ToString("g")
            <br />
        Due by: @Model.TaskSummary.DueDateTime.ToString("g")
            <br />
        Status: @Model.TaskSummary.TaskStatus
            <br />
        @await Html.PartialAsync("Partials/Tag/_TagList", new TagListViewModel(Model?.TaskSummary?.Tags)
        {
            IsOwner = Model?.IsOwner ?? false,
            ReturnUrl = Model?.ReturnUrl ?? "",
            TaskId = Model?.TaskSummary?.Id ?? 0,
        })
            <a href="task?taskId=@Model?.TaskSummary.Id&returnUrl=@Uri.EscapeDataString(Model?.ReturnUrl ?? string.Empty)&isOwner=@Model?.IsOwner">View more</a>
            @if (Model?.IsOwner ?? false)
            {
                <a href="/edit-task?taskId=@Model?.TaskSummary.Id&returnUrl=@Model?.ReturnUrl">Edit</a>
                <form asp-action="DeleteTask" method="post" onsubmit="return confirm('Are you sure?');">
                    <input type="hidden" name="taskId" value="@Model?.TaskSummary.Id" />
                    <input type="hidden" name="returnUrl" value="@Uri.EscapeDataString(Model?.ReturnUrl ?? string.Empty)" />
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            } else
            {
                <form asp-action="UpdateTaskStatus" asp-controller="ListTask" method="post">
                    <input type="hidden" name="TaskId" value="@Model?.TaskSummary.Id" />
                    <input type="hidden" name="returnUrl" value="@Model?.ReturnUrl" />
                    <select name="TaskStatus" onchange="this.form.submit()">
                        @foreach (ToDoListTaskStatus status in Enum.GetValues(typeof(ToDoListTaskStatus)))
                        {
                            <option value="@status" selected="@(Model?.TaskSummary?.TaskStatus == status)">
                                @status
                            </option>
                        }
                    </select>
                </form>
            }
    </div>
}