@model TaskCardModel;
@*
    we want to know if we should highlight overdues.
    Delete or not should depend on if the user is assignee or not.
    Edit should be here and in the details page.
    The rest is the same.
*@
@if (Model?.TaskSummary != null)
{
    var rowClass = "task";
    @if (Model.HighlightOverdues)
    {
        var isOverdue = @Model.TaskSummary.DueDateTime < DateTime.Now && @Model.TaskSummary.TaskStatus != ToDoListTaskStatus.Completed;
        if (isOverdue)
        {
            rowClass = "overdue";
        }
    }
    <div class="@rowClass">
    <strong>@Model.TaskSummary.Title</strong> - @Model.TaskSummary.Description
        <br />
    Created on: @Model.TaskSummary.CreationDateTime.ToString("g")
        <br />
    Due by: @Model.TaskSummary.DueDateTime.ToString("g")
        <br />
    Status: @Model.TaskSummary.TaskStatus
        <br />
    @foreach (var tag in @Model.TaskSummary.Tags)
        {
            <span class="badge bg-secondary">@tag.Name</span>
        }
    <a href="task?taskId=@Model.TaskSummary.Id&returnUrl=@Uri.EscapeDataString(Model.ReturnUrl?.ToString() ?? string.Empty)">View more</a>
        @if (Model.IsOwner)
        {
            <a href="/edit-task?taskId=@Model?.TaskSummary.Id&returnUrl=@Uri.EscapeDataString(Model?.ReturnUrl?.ToString() ?? string.Empty)">Edit</a>
            <form asp-action="DeleteTask" method="post" onsubmit="return confirm('Are you sure?');">
                <input type="hidden" name="taskId" value="@Model?.TaskSummary.Id" />
                <input type="hidden" name="returnUrl" value="@Model?.ReturnUrl" />
                <button type="submit" class="btn btn-danger">Delete</button>
            </form>
        } else
        {
            <form asp-action="UpdateTaskStatus" asp-controller="ListTask" method="post">
                <input type="hidden" name="TaskId" value="@Model?.TaskSummary.Id" />
                <input type="hidden" name="returnUrl" value="@Model?.ReturnUrl" />
                <select name="TaskStatus" onchange="this.form.submit()">
                    @foreach (ToDoListTaskStatus status in Enum.GetValues(typeof(ToDoListTaskStatus)))
                    {
                        <option value="@status" selected="@(Model?.TaskSummary?.TaskStatus == status)">
                            @status
                        </option>
                    }
                </select>
            </form>
        }
    </div>
}