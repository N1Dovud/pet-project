@using WebApp.Models.Helpers.Enums
@model AssignedTasksModel;


@{
    ViewData["Title"] = "Assigned Tasks";
}


<div class="container">
    <form method="get" asp-action="GetAssignedTasks">
        <div class="filter">
            <h3>Filter</h3>
                <select name="filter" onchange="this.form.submit()" class="filter-select">
                    @foreach (StatusFilter filter in Enum.GetValues(typeof(StatusFilter)))
                    {
                        <option value="@filter" selected="@(filter == Model.Filter)">
                            @filter
                        </option>
                    }
                </select>
        </div>

        <div class="sort">
            <h3>Sort</h3>
                <select name="sortBy" onchange="this.form.submit()" class="sort-select">
                    <option value="" ></option>
                    @foreach (SortField sortField in Enum.GetValues(typeof(SortField)))
                    {
                        <option value="@sortField" selected="@(sortField == Model.SortBy)">
                            @sortField
                        </option>
                    }
                </select>
                <label for="reverse">Reverse</label>
                <input id="reverse" type="checkbox" name="descending" checked="@(Model.Descending)" onchange="this.form.submit()" value="true" />
        </div>
    </form>
    <h2>Assigned Tasks</h2>
    @if (Model != null && Model.Tasks != null && Model.Tasks.Count > 0)
    {
        @foreach (var task in Model.Tasks)
        {
            @await Html.PartialAsync("Partials/Task/_TaskSummaryCard", new TaskCardModel
            {
                TaskSummary = task,
                IsOwner = false,
                HighlightOverdues = false,
                ReturnUrl = $"/assigned?filter={Model.Filter}&sortBy={Model.SortBy}&descending={Model.Descending}",
            })
        }
    }
    else
    {
        <p>Seems like there are no tasks assigned to you!</p>
    }
</div>