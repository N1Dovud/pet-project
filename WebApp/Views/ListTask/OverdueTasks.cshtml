@model List<TaskSummaryModel>;
@{
    ViewData["Title"] = "Overdue Tasks";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0 text-danger">
            <i class="me-2">⚠️</i> Overdue Tasks
        </h2>
        <span class="badge bg-danger">
            @(Model?.Count ?? 0) overdue
        </span>
    </div>

    <div class="tasks-container">
        @if (Model != null && Model.Count > 0)
        {
            <div class="alert alert-warning mb-4">
                <strong>Action Required:</strong> The following tasks are past their due dates and need immediate attention.
            </div>

            @foreach (var task in Model)
            {
                @await Html.PartialAsync("Partials/Task/_TaskSummaryCard", new TaskCardModel
                {
                    HighlightOverdues = true,
                IsOwner = true,
                ReturnUrl = $"/overdue",
                TaskSummary = task,
                })
                ;
            }
        }
        else
        {
            <div class="text-center text-success py-5">
                <div class="mb-3">
                    <i class="fs-1">✅</i>
                </div>
                <h4 class="text-success mb-2">Great job!</h4>
                <p class="mb-0">No overdue tasks. You're all caught up!</p>
            </div>
        }
    </div>
</div>